@model X.PagedList.IPagedList<global::Motorbike.Models.Account>
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "Quản lý khách hàng";
    var filter = ViewBag.CurrentFilter as global::Motorbike.ViewModels.CustomerFilterViewModel ?? new global::Motorbike.ViewModels.CustomerFilterViewModel();
}

@section Styles {
    <link href="~/lib/x-pagedlist/pageList.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/toastr.js/toastr.min.css" />
}

<div class="admin-content-header d-flex justify-content-between align-items-center">
    <h2 class="mb-4">@ViewData["Title"]</h2>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0"><i class="fas fa-search me-2"></i>Tìm kiếm khách hàng</h5>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index" class="row g-3">
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" name="SearchTerm" class="form-control" placeholder="Tìm theo tên, email, SĐT..." value="@filter.SearchTerm" />
                </div>
            </div>
            <div class="col-md-3">
                <select name="SortOrder" class="form-select">
                    @{
                        var isDefaultSelected = string.IsNullOrEmpty(filter.SortOrder);
                        var isNameDescSelected = filter.SortOrder == "name_desc";
                        var isEmailSelected = filter.SortOrder == "email";
                        var isEmailDescSelected = filter.SortOrder == "email_desc";
                    }
                    <option value="" selected="@isDefaultSelected">Sắp xếp theo tên (A-Z)</option>
                    <option value="name_desc" selected="@isNameDescSelected">Sắp xếp theo tên (Z-A)</option>
                    <option value="email" selected="@isEmailSelected">Sắp xếp theo email (A-Z)</option>
                    <option value="email_desc" selected="@isEmailDescSelected">Sắp xếp theo email (Z-A)</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search me-1"></i> Tìm kiếm
                </button>
            </div>
            <div class="col-md-2">
                <a asp-action="Index" class="btn btn-secondary w-100">
                    <i class="fas fa-sync-alt me-1"></i> Đặt lại
                </a>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="fas fa-users me-2"></i>Danh sách khách hàng</h5>
        <span class="badge bg-light text-dark">Tổng: @Model.TotalItemCount khách hàng</span>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-striped table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Tên tài khoản</th>
                        <th>Email</th>
                        <th>Số điện thoại</th>
                        <th>Địa chỉ</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.AccountId</td>
                            <td>@item.Username</td>
                            <td>@item.Email</td>
                            <td>@(string.IsNullOrEmpty(item.Phone) ? "Chưa cập nhật" : item.Phone)</td>
                            <td class="text-truncate" style="max-width: 200px;">@(string.IsNullOrEmpty(item.Address) ? "Chưa cập nhật" : item.Address)</td>
                            <td>
                                <div class="action-buttons">
                                    <a asp-action="Details" asp-route-id="@item.AccountId" class="btn btn-primary btn-action-text">
                                        <i class="fas fa-eye me-1"></i> Chi tiết
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.AccountId" class="btn btn-warning btn-action-text">
                                        <i class="fas fa-edit me-1"></i> Sửa
                                    </a>
                                    <a asp-action="Orders" asp-route-id="@item.AccountId" class="btn btn-info btn-action-text">
                                        <i class="fas fa-shopping-cart me-1"></i> Đơn hàng
                                    </a>
                                    <a asp-action="Contacts" asp-route-id="@item.AccountId" class="btn btn-secondary btn-action-text">
                                        <i class="fas fa-envelope me-1"></i> Liên hệ
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }

                    @if (!Model.Any())
                    {
                        <tr>
                            <td colspan="6" class="text-center py-4">
                                <div class="text-muted">
                                    <i class="fas fa-info-circle me-2"></i>Không có dữ liệu khách hàng nào phù hợp.
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer d-flex justify-content-center">
        @if (Model.PageCount > 1)
        {
            var options = new PagedListRenderOptions {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
                UlElementClasses = new string[] { "pagination" }
            };
            
            @Html.PagedListPager(Model, page => Url.Action("Index", new {
                page,
                SearchTerm = filter.SearchTerm,
                SortOrder = filter.SortOrder
            }), options)
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/toastr.js/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            // Cấu hình toastr
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": true,
                "timeOut": "5000",
                "extendedTimeOut": "2000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut",
                "escapeHtml": false
            };

            // Hiển thị thông báo thành công nếu có
            @if (TempData["SuccessMessage"] != null)
            {
                <text>toastr.success('@TempData["SuccessMessage"]');</text>
            }

            // Hiển thị thông báo lỗi nếu có
            @if (TempData["ErrorMessage"] != null)
            {
                <text>toastr.error('@TempData["ErrorMessage"]');</text>
            }
        });
    </script>
}