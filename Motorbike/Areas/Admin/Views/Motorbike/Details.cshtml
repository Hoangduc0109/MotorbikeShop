@model global::Motorbike.Models.Motorbike

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

@{
    ViewData["Title"] = "Chi tiết xe máy";
}

<div class="admin-content-header d-flex justify-content-between align-items-center">
    <h2 class="mb-4">Chi tiết xe máy</h2>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.MotorbikeId" class="btn btn-warning">
            <i class="fas fa-edit me-1"></i> Sửa
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i> Quay lại
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4>@Model.MotorbikeName</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5">
                        <img src="~/images/products/@(string.IsNullOrEmpty(Model.Image) ? "default.jpg" : Model.Image)" 
                             alt="@Model.MotorbikeName" class="img-fluid rounded mb-3" />
                    </div>
                    <div class="col-md-7">
                        <div class="mb-3">
                            <h5 class="text-muted">Thông tin cơ bản</h5>
                            <hr />
                            <dl class="row">
                                <dt class="col-sm-4">ID:</dt>
                                <dd class="col-sm-8">@Model.MotorbikeId</dd>

                                <dt class="col-sm-4">Thương hiệu:</dt>
                                <dd class="col-sm-8">@Model.Brand?.BrandName</dd>
                                
                                <dt class="col-sm-4">Giá bán:</dt>
                                <dd class="col-sm-8 fw-bold text-danger">@string.Format("{0:N0} VNĐ", Model.Price)</dd>
                                
                                <dt class="col-sm-4">Tồn kho:</dt>
                                <dd class="col-sm-8">@Model.Stock</dd>
                                
                                <dt class="col-sm-4">Đã bán:</dt>
                                <dd class="col-sm-8">@(Model.TotalSold ?? 0)</dd>
                            </dl>
                        </div>
                    </div>
                </div>
                
                <div class="mt-4">
                    <h5 class="text-muted">Mô tả sản phẩm</h5>
                    <hr />
                    <p class="mb-0">@Model.Description</p>
                </div>
            </div>
            <div class="card-footer">
                <a asp-action="Edit" asp-route-id="@Model.MotorbikeId" class="btn btn-warning">
                    <i class="fas fa-edit me-1"></i> Sửa
                </a>
                <a href="javascript:void(0);" class="btn btn-danger btn-delete">
                    <i class="fas fa-trash-alt me-1"></i> Xóa
                </a>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i> Quay lại
                </a>
            </div>
        </div>
    </div>
</div>

<input type="hidden" name="__RequestVerificationToken" value="@requestToken" />

@section Scripts {
    <script src="~/lib/toastr.js/toastr.min.js"></script>
    <script>
        $(document).ready(function() {
            // Cấu hình thông báo toast
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": true,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "2000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            
            // Xử lý nút xóa
            $('.btn-delete').click(function(e) {
                e.preventDefault();
                
                if (confirm('Bạn có chắc chắn muốn xóa xe máy này?')) {
                    const id = @Model.MotorbikeId;
                    const token = $('input[name="__RequestVerificationToken"]').val();
                    
                    $.ajax({
                        url: '@Url.Action("DeleteAjax", "Motorbike", new { area = "Admin" })',
                        type: 'POST',
                        data: {
                            id: id,
                            __RequestVerificationToken: token
                        },
                        dataType: 'json',
                        contentType: 'application/x-www-form-urlencoded',
                        success: function(result) {
                            console.log("Response type:", typeof result);
                            console.log("Response content:", result);
                            
                            // Nếu result là string, thử parse thành JSON
                            if (typeof result === 'string') {
                                try {
                                    result = JSON.parse(result);
                                    console.log("Parsed JSON:", result);
                                } catch (e) {
                                    console.error("Không thể parse JSON:", e);
                                }
                            }
                            
                            if (result && result.success === true) {
                                toastr.success(result.message || "Xóa xe máy thành công!");
                                
                                // Chuyển hướng về trang danh sách sau 1 giây
                                setTimeout(function() {
                                    window.location.href = '@Url.Action("Index", "Motorbike", new { area = "Admin" })';
                                }, 1000);
                            } else {
                                toastr.error((result && result.message) ? result.message : "Có lỗi xảy ra khi xóa xe máy!");
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("AJAX Error Status:", status);
                            console.error("AJAX Error:", error);
                            console.error("Response Text:", xhr.responseText);
                            
                            // Thử parse responseText nếu có
                            if (xhr.responseText) {
                                try {
                                    var errorResult = JSON.parse(xhr.responseText);
                                    if (errorResult && errorResult.message) {
                                        toastr.error(errorResult.message);
                                        return;
                                    }
                                } catch (e) {
                                    console.error("Không thể parse responseText:", e);
                                }
                            }
                            
                            toastr.error('Đã xảy ra lỗi khi xóa xe máy: ' + error);
                        }
                    });
                }
            });
        });
    </script>
}

@section Styles {
    <link href="~/lib/toastr.js/toastr.min.css" rel="stylesheet" />
}