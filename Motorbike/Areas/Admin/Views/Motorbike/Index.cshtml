@model X.PagedList.IPagedList<global::Motorbike.Models.Motorbike>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Quản lý xe máy";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
<input type="hidden" name="__RequestVerificationToken" value="@requestToken" />

<div class="admin-content-header d-flex justify-content-between align-items-center">
    <h2 class="mb-4">Quản lý xe máy</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus-circle me-1"></i> Thêm xe mới
    </a>
</div>


@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Lỗi!</strong> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="admin-filter-section mb-4">
    <div class="row">
        <div class="col-md-8">
            <form asp-action="Index" method="get" class="d-flex">
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control me-2" placeholder="Tìm kiếm theo tên xe...">
                <button type="submit" class="btn btn-primary">Tìm kiếm</button>
            </form>
        </div>
        <div class="col-md-4">
            <form asp-action="Index" method="get" id="brandFilterForm">
                <input type="hidden" name="searchString" value="@ViewData["CurrentFilter"]" />
                <select name="brandId" class="form-select" onchange="document.getElementById('brandFilterForm').submit();">
                    <option value="">Tất cả thương hiệu</option>
                    @foreach (var brand in ViewBag.Brands)
                    {
                        <option value="@brand.BrandId" selected="@(ViewData["SelectedBrand"] != null && (int)ViewData["SelectedBrand"] == brand.BrandId)">
                            @brand.BrandName
                        </option>
                    }
                </select>
            </form>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Tên xe</th>
                <th>Thương hiệu</th>
                <th>Giá (VND)</th>
                <th>Hình ảnh</th>
                <th>Tồn kho</th>
                <th>Đã bán</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="motorbike-row-@item.MotorbikeId">
                    <td>@item.MotorbikeId</td>
                    <td>@item.MotorbikeName</td>
                    <td>@item.Brand?.BrandName</td>
                    <td>@string.Format("{0:N0}", item.Price)</td>
                    <td>
                        <img src="~/images/products/@(string.IsNullOrEmpty(item.Image) ? "default.jpg" : item.Image)" 
                             alt="@item.MotorbikeName" class="admin-product-thumbnail" />
                    </td>
                    <td>@item.Stock</td>
                    <td>@(item.TotalSold ?? 0)</td>
                    <td>
                        <div class="action-buttons">
                            <a asp-action="Details" asp-route-id="@item.MotorbikeId" 
                               class="btn btn-primary btn-action-text">
                                <i class="fas fa-eye me-1"></i> Xem
                            </a>
                            <a asp-action="Edit" asp-route-id="@item.MotorbikeId" 
                               class="btn btn-warning btn-action-text">
                                <i class="fas fa-edit me-1"></i> Sửa
                            </a>
                            <button type="button" class="btn btn-danger btn-action-text delete-motorbike-btn" 
                                    data-id="@item.MotorbikeId" data-name="@item.MotorbikeName">
                                <i class="fas fa-trash-alt me-1"></i> Xóa
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-between align-items-center mt-3">
    <div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewData["CurrentFilter"], brandId = ViewData["SelectedBrand"] }),
        new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
            UlElementClasses = new string[] { "pagination" }
        })
    </div>
</div>

<!-- Modal xác nhận xóa -->
<div class="modal fade" id="deleteMotorbikeModal" tabindex="-1" aria-labelledby="deleteMotorbikeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteMotorbikeModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa xe máy "<span id="motorbikeNameToDelete"></span>"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy bỏ</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteMotorbike">Xác nhận xóa</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/toastr.js/toastr.min.js"></script>
    <script>
        // Cấu hình toastr
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": true,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "2000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut",
            "escapeHtml": false
        };

        $(document).ready(function () {
            // Khai báo biến một lần duy nhất
            let selectedMotorbikeId = 0;
            
            // Xử lý sự kiện click nút xóa
            $('.delete-motorbike-btn').click(function () {
                selectedMotorbikeId = $(this).data('id');
                const motorbikeName = $(this).data('name');
                
                $('#motorbikeNameToDelete').text(motorbikeName);
                $('#deleteMotorbikeModal').modal('show');
            });
            
            // Chỉ gắn sự kiện cho nút xác nhận xóa một lần duy nhất
            $('#confirmDeleteMotorbike').off('click').on('click', function () {
                if (selectedMotorbikeId <= 0) return;
                
                // Ẩn modal
                $('#deleteMotorbikeModal').modal('hide');
                
                // Tạo biến lưu tham chiếu đến thông báo đang xử lý để có thể xóa sau này
                var processingToast = null;
                
                // Gửi yêu cầu xóa
                $.ajax({
                    url: '@Url.Action("DeleteAjax")',
                    type: 'POST',
                    data: { 
                        id: selectedMotorbikeId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        console.log("Kết quả xóa:", result);
                        
                        // Xóa toàn bộ thông báo toastr hiện tại trước khi hiển thị thông báo mới
                        toastr.clear();
                        
                        // Phân tích kết quả JSON nếu cần
                        if (typeof result === 'string') {
                            try {
                                result = JSON.parse(result);
                            } catch (e) {
                                console.error("Lỗi khi phân tích kết quả:", e);
                            }
                        }
                        
                        // Kiểm tra kết quả cẩn thận hơn
                        if (result && result.success === true) {
                            // Hiển thị thông báo thành công
                            toastr.success(result.message || "Xóa xe máy thành công!");
                            
                            // Xóa dòng với hiệu ứng
                            var row = $('#motorbike-row-' + selectedMotorbikeId);
                            if (row.length) {
                                row.css('background-color', '#ffdddd');
                                setTimeout(function() {
                                    row.fadeOut(800, function() {
                                        $(this).remove();
                                        
                                        // Kiểm tra nếu không còn dòng nào
                                        if ($('table tbody tr').length === 0) {
                                            $('table tbody').append('<tr><td colspan="8" class="text-center">Không có dữ liệu</td></tr>');
                                        }
                                    });
                                }, 500);
                            } else {
                                // Nếu không tìm thấy row, tải lại trang sau 1.5 giây
                                setTimeout(function() { location.reload(); }, 1500);
                            }
                        } else {
                            // Xử lý lỗi thực sự (không phải trường hợp thành công)
                            toastr.error(result && result.message ? result.message : "Có lỗi xảy ra khi xóa sản phẩm!");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Xóa toàn bộ thông báo toastr hiện tại
                        toastr.clear();
                        
                        console.error("Lỗi AJAX:", error);
                        console.error("Chi tiết:", xhr.responseText);
                        toastr.error('Đã xảy ra lỗi khi kết nối đến máy chủ. Vui lòng thử lại sau.');
                    }
                });
            });

            // Sửa lỗi với Bootstrap alerts
            $('.alert').alert();
            
            $(document).on('closed.bs.alert', '.alert', function(e) {
                e.stopPropagation();
            });

            // Kiểm tra thông báo từ localStorage
            var successMessage = localStorage.getItem('adminSuccessMessage');
            if (successMessage) {
                toastr.success(successMessage);
                localStorage.removeItem('adminSuccessMessage');
            }

            // Xử lý thông báo từ URL parameters
            var urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('status') && urlParams.get('status') === 'success') {
                var message = urlParams.has('message') ? 
                    decodeURIComponent(urlParams.get('message')) : 
                    "Thao tác thành công!";
                
                toastr.success(message);
                
                // Xóa parameters
                var newUrl = window.location.protocol + "//" + 
                            window.location.host + 
                            window.location.pathname;
                window.history.replaceState({path: newUrl}, '', newUrl);
            }
        });
    </script>
}

@section Styles {
    <link href="~/lib/toastr.js/toastr.min.css" rel="stylesheet" />
    <style>
        .admin-product-thumbnail {
            max-width: 80px;
            max-height: 60px;
            object-fit: contain;
        }
        
        .action-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }
        
        .btn-action-text {
            white-space: nowrap;
            display: inline-flex;
            align-items: center;
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
        }
        
        .pagination {
            margin-bottom: 0;
        }
        
        /* Các thiết lập responsive */
        @@media (max-width: 767.98px) {
            .action-buttons {
                flex-direction: column;
                gap: 3px;
            }
            
            .btn-action-text {
                width: 100%;
            }
        }
    </style>
}